scalar DateTime

type TimeFrame {
    id: ID!
    name: String!
    description: String
}

type Owner {
    id: Int!
    username: String!
}

type Lead {
    id: Int!
    username: String!
}

type Contributors {
    id: Int!
    username: String!
}

type Tags {
    id: Int!
    username: String!
}

# ============================= auth type & input =============================
input RefreshTokenInput{
    token: String!
}

input NewUser {
    username: String!
    password: String!
}

input Login {
    username: String!
    password: String!
}
# ============================= end =============================

# ============================= objective type & input =============================
type Objective {
    id: String!
    name: String!
    description: String!
    status: Int!
    key_result: KeyResult
    owner: Owner!
    lead: Lead!
    contributors: Contributors
    tags: Tags
    timeframe: TimeFrame
}
input NewObjective {
    name: String!
    description: String!
    owner: String!
    lead: String!
    timeframe: String! # id timeframe
    contributors: String
    tags: String
    status: String
}
# ============================= end =============================

# ============================= key result type & input =============================
type KeyResult {
    id: String!
    name: String!
    description: String!
    lead: Lead!
    objective: Objective!
    measure_unit: String!
    min_value: Float!
    max_value: Float!
    result_type: String!
    status: Int!
    parent_key_result: String
    contributors: Contributors
    start_date: DateTime
    due_date: DateTime
    comment: String
}
# ============================= end  =============================

# ============================= QUERY =============================
type Query {
    objective: [Objective!]!
}
# ============================= end  =============================

# ============================= MUTATION =============================
type Mutation {
    # objective
    newObjective(input: NewObjective!): Objective!

    # auth
    createUser(input: NewUser!): String!
    login(input: Login!): String!
    refreshToken(input: RefreshTokenInput!): String!
}

# ============================= end  =============================